name: Build SDL2 Image Libraries

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: x86_64
            a: x64
            arch-cmake: x64
          - os: windows-latest
            arch: x86
            a: x86
            arch-cmake: win32
          - os: windows-latest
            arch: arm64
            a: arm64
            arch-cmake: arm64
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64
      
    steps:
    - uses: actions/checkout@v4.1.7
      with:
        repository: 'libsdl-org/SDL_image'
        path: 'SDLImage'
        ref: 'release-2.8.2'
        submodules: true

    - name: Checkout specific commit
      run: |
        cd SDLImage
        git checkout abcf63a

    - name: Install Dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libsdl2-dev \
          libpng-dev \
          libjpeg-dev \
          libtiff-dev \
          libwebp-dev

    - name: Install Dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install sdl2 libpng jpeg libtiff webp

    - name: Install SDL2 on Windows
      if: matrix.os == 'windows-latest' && matrix.arch == 'arm64'
      shell: pwsh
      run: |
          cd ./SDLImage/
          git clone https://github.com/libsdl-org/SDL.git SDL2
          cd SDL2
          git checkout tags/release-2.30.6         
          mkdir build
          cd build
          cmake .. -A arm64 -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
  
    - name: Install SDL2 on Windows
      if: matrix.os == 'windows-latest' && matrix.arch != 'arm64'
      shell: pwsh
      run: |
          cd ./SDLImage/
          Invoke-WebRequest -Uri https://www.libsdl.org/release/SDL2-devel-2.30.6-VC.zip -OutFile SDL2.zip
          Expand-Archive -Path SDL2.zip -DestinationPath SDL2

    - name: Configure SDLImage with CMake
      if: matrix.os == 'windows-latest' && matrix.arch == 'arm64'
      run: |
        cd SDLImage
        cmake -S ./ -B ./build -DBUILD_SHARED_LIBS=ON -DSDL2IMAGE_SAMPLES=OFF -DSDL2IMAGE_TESTS=OFF -DSDL2_INCLUDE_DIR="./SDL2/include" -DSDL2_LIBRARY="./SDL2/build/Release/SDL2.lib" -A arm64
        
    - name: Configure SDLImage with CMake
      if: matrix.os == 'windows-latest' && matrix.arch != 'arm64'
      run: |
        cd SDLImage
        cmake -S ./ -B ./build -DBUILD_SHARED_LIBS=ON -DSDL2IMAGE_SAMPLES=OFF -DSDL2IMAGE_TESTS=OFF -DSDL2_INCLUDE_DIR="./SDL2/SDL2-2.30.6/include" -DSDL2_LIBRARY="./SDL2/SDL2-2.30.6/lib/${{ matrix.a }}/SDL2.lib" -A ${{ matrix.arch-cmake }}
        
    - name: Configure SDLImage with CMake
      if: matrix.os != 'windows-latest'
      run: |
        cd SDLImage
        cmake -S ./ -B ./build -DBUILD_SHARED_LIBS=ON -DSDL2IMAGE_SAMPLES=OFF -DSDL2IMAGE_TESTS=OFF

    - name: Build SDLImage
      run: cmake --build SDLImage/build --config Release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-artifacts 
        path: |
          SDLImage/build/Release/*.dll
          SDLImage/build/*.so
          SDLImage/build/*.dylib
        if-no-files-found: ignore # 'warn' or 'ignore' or 'error'
